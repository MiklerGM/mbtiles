language: node_js
services:
  - docker
git:
  depth: false
  quiet: true
install:
  - git clone https://github.com/mapbox/tippecanoe.git tippecanoe
  - cd tippecanoe
  - git for-each-ref --sort=taggerdate --format '%(creatordate:raw) %(refname)' refs/tags | sort -n | tail -n5
  - git for-each-ref --sort=taggerdate --format '%(creatordate:raw) %(refname)' refs/tags | sort -n | tail -n1 | sed s%.*tags/%% > ~/release
  - git checkout tags/$(cat ~/release)
  - echo Building against version $(cat ~/release)
  - git for-each-ref --sort=taggerdate --format '%(creatordate) %(refname)' refs/tags | grep $(cat ~/release)
  - cd ..
jobs:
  include:
    - stage: docker build
      script:
        - docker build --rm -t "${DOCKER_USERNAME}/${TIPPECANOE}:latest" -t "${DOCKER_USERNAME}/${TIPPECANOE}:$(cat ~/release)" .
    - stage: docker push
      if: branch = master AND type = push
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t "${DOCKER_USERNAME}/${TIPPECANOE}:latest" -t "${DOCKER_USERNAME}/${TIPPECANOE}:$(cat ~/release)" .
        - docker push "${DOCKER_USERNAME}/${TIPPECANOE}:latest"
        - docker push "${DOCKER_USERNAME}/${TIPPECANOE}:$(cat ~/release)"
    - stage: mbtiles docker push
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t "${DOCKER_USERNAME}/${MBTILES}:latest" -f Dockerfile.mbtiles .
        - docker build -t "${DOCKER_USERNAME}/${MBTILESPSQL}:latest" -f Dockerfile.mbtiles-psql .
        - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" = "master" ]];then
        docker push "${DOCKER_USERNAME}/${MBTILES}:latest";
        docker push "${DOCKER_USERNAME}/${MBTILESPSQL}:latest"; fi'
